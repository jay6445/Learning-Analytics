Teams %>% mutate(runrate = R/G,bbrate = BB/G) %>% do(tidy(lm(runrate ~ bbrate,data=.),conf.int = TRUE))
Teams %>%
filter(yearID %in% 2002) %>%
mutate(BB = BB/G,
singles = (H-X2B-X3B-HR)/G,
doubles = X2B/G,
triples =X3B/G,
HR=HR/G,
R=R/G)  %>%
mutate(R_hat = predict(fit, newdata = .)) %>%
ggplot(aes(R_hat, R, label = teamID)) +
geom_point() +
geom_text(nudge_x=0.1, cex = 2) +
geom_abline()
library(Lahman)
data(Teams)
# regression with BB, singles, doubles, triples, HR
fit <- Teams %>%
filter(yearID %in% 1961:2001) %>%
mutate(BB = BB / G,
singles = (H - X2B - X3B - HR) / G,
doubles = X2B / G,
triples = X3B / G,
HR = HR / G,
R = R / G) %>%
lm(R ~ BB + singles + doubles + triples + HR, data = .)
library(dplyr)
# regression with BB, singles, doubles, triples, HR
fit <- Teams %>%
filter(yearID %in% 1961:2001) %>%
mutate(BB = BB / G,
singles = (H - X2B - X3B - HR) / G,
doubles = X2B / G,
triples = X3B / G,
HR = HR / G,
R = R / G) %>%
lm(R ~ BB + singles + doubles + triples + HR, data = .)
Teams %>%
filter(yearID %in% 2002) %>%
mutate(BB = BB/G,
singles = (H-X2B-X3B-HR)/G,
doubles = X2B/G,
triples =X3B/G,
HR=HR/G,
R=R/G)  %>%
mutate(R_hat = predict(fit, newdata = .)) %>%
ggplot(aes(R_hat, R, label = teamID)) +
geom_point() +
geom_text(nudge_x=0.1, cex = 2) +
geom_abline()
library(ggplot2)
Teams %>%
filter(yearID %in% 2002) %>%
mutate(BB = BB/G,
singles = (H-X2B-X3B-HR)/G,
doubles = X2B/G,
triples =X3B/G,
HR=HR/G,
R=R/G)  %>%
mutate(R_hat = predict(fit, newdata = .)) %>%
ggplot(aes(R_hat, R, label = teamID)) +
geom_point() +
geom_text(nudge_x=0.1, cex = 2) +
geom_abline()
# average number of team plate appearances per game
pa_per_game <- Batting %>% filter(yearID == 2002) %>%
group_by(teamID) %>%
summarize(pa_per_game = sum(AB+BB)/max(G)) %>%
pull(pa_per_game) %>%
mean
# compute per-plate-appearance rates for players available in 2002 using previous data
players <- Batting %>% filter(yearID %in% 1999:2001) %>%
group_by(playerID) %>%
mutate(PA = BB + AB) %>%
summarize(G = sum(PA)/pa_per_game,
BB = sum(BB)/G,
singles = sum(H-X2B-X3B-HR)/G,
doubles = sum(X2B)/G,
triples = sum(X3B)/G,
HR = sum(HR)/G,
AVG = sum(H)/sum(AB),
PA = sum(PA)) %>%
filter(PA >= 300) %>%
select(-G) %>%
mutate(R_hat = predict(fit, newdata = .))
# plot player-specific predicted runs
qplot(R_hat, data = players, geom = "histogram", binwidth = 0.5, color = I("black"))
# add 2002 salary of each player
players <- Salaries %>%
filter(yearID == 2002) %>%
select(playerID, salary) %>%
right_join(players, by="playerID")
# add 2002 salary of each player
players <- Salaries %>%
filter(yearID == 2002) %>%
select(playerID, salary) %>%
right_join(players, by="playerID")
tmp_tab <- Appearances %>%
filter(yearID == 2002) %>%
group_by(playerID) %>%
summarize_at(position_names, sum) %>%
ungroup()
players <- Master %>%
select(playerID, nameFirst, nameLast, debut) %>%
mutate(debut = as.Date(debut)) %>%
right_join(players, by="playerID")
players %>% select(nameFirst, nameLast, POS, salary, R_hat) %>%
arrange(desc(R_hat)) %>%
top_n(10)
# players with a higher metric have higher salaries
players %>% ggplot(aes(salary, R_hat, color = POS)) +
geom_point() +
scale_x_log10()
# remake plot without players that debuted after 1998
library(lubridate)
position_names <- c("G_p","G_c","G_1b","G_2b","G_3b","G_ss","G_lf","G_cf","G_rf")
players <- Master %>%
select(playerID, nameFirst, nameLast, debut) %>%
mutate(debut = as.Date(debut)) %>%
right_join(players, by="playerID")
players %>% select(nameFirst, nameLast, POS, salary, R_hat) %>%
arrange(desc(R_hat)) %>%
top_n(10)
# regression with BB, singles, doubles, triples, HR
fit <- Teams %>%
filter(yearID %in% 1961:2001) %>%
mutate(BB = BB / G,
singles = (H - X2B - X3B - HR) / G,
doubles = X2B / G,
triples = X3B / G,
HR = HR / G,
R = R / G) %>%
lm(R ~ BB + singles + doubles + triples + HR, data = .)
Teams %>%
filter(yearID %in% 2002) %>%
mutate(BB = BB/G,
singles = (H-X2B-X3B-HR)/G,
doubles = X2B/G,
triples =X3B/G,
HR=HR/G,
R=R/G)  %>%
mutate(R_hat = predict(fit, newdata = .)) %>%
ggplot(aes(R_hat, R, label = teamID)) +
geom_point() +
geom_text(nudge_x=0.1, cex = 2) +
geom_abline()
# average number of team plate appearances per game
pa_per_game <- Batting %>% filter(yearID == 2002) %>%
group_by(teamID) %>%
summarize(pa_per_game = sum(AB+BB)/max(G)) %>%
pull(pa_per_game) %>%
mean
players <- Batting %>% filter(yearID %in% 1999:2001) %>%
group_by(playerID) %>%
mutate(PA = BB + AB) %>%
summarize(G = sum(PA)/pa_per_game,
BB = sum(BB)/G,
singles = sum(H-X2B-X3B-HR)/G,
doubles = sum(X2B)/G,
triples = sum(X3B)/G,
HR = sum(HR)/G,
AVG = sum(H)/sum(AB),
PA = sum(PA)) %>%
filter(PA >= 300) %>%
select(-G) %>%
mutate(R_hat = predict(fit, newdata = .))
qplot(R_hat, data = players, geom = "histogram", binwidth = 0.5, color = I("black"))
players <- Salaries %>%
filter(yearID == 2002) %>%
select(playerID, salary) %>%
right_join(players, by="playerID")
tmp_tab <- Appearances %>%
filter(yearID == 2002) %>%
group_by(playerID) %>%
summarize_at(position_names, sum) %>%
ungroup()
players <- Master %>%
select(playerID, nameFirst, nameLast, debut) %>%
mutate(debut = as.Date(debut)) %>%
right_join(players, by="playerID")
players %>% select(nameFirst, nameLast, POS, salary, R_hat) %>%
arrange(desc(R_hat)) %>%
top_n(10)
tmp_tab <- Appearances %>%
filter(yearID == 2002) %>%
group_by(playerID) %>%
summarize_at(position_names, sum) %>%
ungroup()
position_names <- c("G_p","G_c","G_1b","G_2b","G_3b","G_ss","G_lf","G_cf","G_rf")
pos <- tmp_tab %>%
select(position_names) %>%
apply(., 1, which.max)
players <- data_frame(playerID = tmp_tab$playerID, POS = position_names[pos]) %>%
mutate(POS = str_to_upper(str_remove(POS, "G_"))) %>%
filter(POS != "P") %>%
right_join(players, by="playerID") %>%
filter(!is.na(POS)  & !is.na(salary))
players <- Master %>%
select(playerID, nameFirst, nameLast, debut) %>%
mutate(debut = as.Date(debut)) %>%
right_join(players, by="playerID")
players %>% select(nameFirst, nameLast, POS, salary, R_hat) %>%
arrange(desc(R_hat)) %>%
top_n(10)
players %>% filter(year(debut) < 1998) %>%
ggplot(aes(salary, R_hat, color = POS)) +
geom_point() +
scale_x_log10()
# players with a higher metric have higher salaries
players %>% ggplot(aes(salary, R_hat, color = POS)) +
geom_point() +
scale_x_log10()
# means and standard deviations
galton_heights %>%
summarize(mean(father), sd(father), mean(son), sd(son))
# create the dataset
library(tidyverse)
library(HistData)
data("GaltonFamilies")
set.seed(1983)
galton_heights <- GaltonFamilies %>%
filter(gender == "male") %>%
group_by(family) %>%
sample_n(1) %>%
ungroup() %>%
select(father, childHeight) %>%
rename(son = childHeight)
# means and standard deviations
galton_heights %>%
summarize(mean(father), sd(father), mean(son), sd(son))
# scatterplot of father and son heights
galton_heights %>%
ggplot(aes(father, son)) +
geom_point(alpha = 0.5)
ggplot(galton_heights,aes(father,son)) + geom_point(alpha= 0.5)
rho <- mean(scale(galton_heights$father)*scale(galton_heights$son))
rho
#rho is the symbol for correlation coefficient
cor(w_salary[1:62],b_salary) #correlation coefficient function
#rho is the symbol for correlation coefficient
cor(w_salary[1:62],b_salary) #correlation coefficient function
length(b_salary)
ggplot(data.frame(w_salary[1:62],b_salary),aes(w_salary[1:62],b_salary))+geom_point(alpha=0.5)
#correlation between fathers height and sons height
cor(galton_heights$father,galton_heights$son) #positive for sure but not a strong one
#take a sample of 25 pairs from the population
# compute sample correlation
R <- sample_n(galton_heights, 25, replace = TRUE) %>%
summarize(r = cor(father, son))
# QQ-plot to evaluate whether N is large enough
data.frame(R) %>%
ggplot(aes(sample = R)) +
stat_qq() +
geom_abline(intercept = mean(R), slope = sqrt((1-mean(R)^2)/(N-2)))
qplot(R, geom = "histogram", binwidth = 0.05, color = I("black"))
sample_n(galton_heights, N, replace = TRUE) %>%
summarize(r = cor(father, son)) %>%
pull(r)
# Monte Carlo simulation to show distribution of sample correlation for a sample of 1000
B <- 1000
N <- 25
R <- replicate(B, {
sample_n(galton_heights, N, replace = TRUE) %>%
summarize(r = cor(father, son)) %>%
pull(r)
})
qplot(R, geom = "histogram", binwidth = 0.05, color = I("black"))
galton
qplot(galton_heights$father , geom='histogram')
qplot(galton_heights$father , geom='histogram' color=I("black"))
qplot(galton_heights$father , geom='histogram', color=I("black"))
qplot(galton_heights$son , geom='histogram', color=I("black"))
qplot(galton_heights$father , geom='histogram', color=I("black"))
qplot(galton_heights$son , geom='histogram', color=I("black"))
qplot(galton_heights$son , geom='histogram', color=I("black"))
qplot(galton_heights$father , geom='histogram', color=I("black"))
?rnorm
rnorm(100, mean = 0, sd =1)
qplot(rnorm(100, mean = 0, sd =1),geom="histogram",color=I("black"))
qplot(rnorm(100, mean = 0, sd =1),geom="histogram",color=I("black"))
qplot(rnorm(100, mean = 0, sd =1),geom="histogram",color=I("black"))
qplot(rnorm(100, mean = 0, sd =1),geom="histogram",color=I("black"))
qplot(rnorm(100, mean = 0, sd =1),geom="histogram",color=I("black"))
qplot(rnorm(100, mean = 0, sd =1),geom="histogram",color=I("black"))
?rnorm
qplot(rnorm(100, mean = 45, sd =1),geom="histogram",color=I("black"))
qplot(rnorm(100, mean = 45, sd =1),geom="histogram",color=I("black"))
rnorm(100, mean = 45, sd =1)
qplot(rnorm(100, mean = 45, sd =20),geom="histogram",color=I("black"))
qplot(rnorm(100, mean = 45, sd =20),geom="histogram",color=I("black"))
qplot(rnorm(100, mean = 45, sd =50),geom="histogram",color=I("black"))
qplot(rnorm(100, mean = 45, sd =100),geom="histogram",color=I("black"))
qplot(rnorm(100, mean = 45, sd =0),geom="histogram",color=I("black"))
qplot(rnorm(100, mean = 45, sd =-1),geom="histogram",color=I("black"))
qplot(rnorm(100, mean = 45, sd =1),geom="histogram",color=I("black"))
qplot(rnorm(100, mean = 45, sd =1),geom="histogram",color=I("black"))
?ggplot()
geom_curve()
?geom_curve()
ggplot(aes(galton_heights$father)) +geom_curve()
galton_heights %>% ggplot(aes(father)) +geom_curve()
galton_heights %>% ggplot(aes(father,son)) +geom_curve()
?geom_curve
galton_heights %>% ggplot(aes(father,son)) +geom_curve(data=.)
galton_heights %>% ggplot(aes(father,son)) +geom_curve(curvature = 0.5)
?geom_curve
galton_heights %>% ggplot(aes(father,son)) +geom_curve(mapping = NULL,
data = NULL,
stat = "identity",
position = "identity",
arrow = NULL,
arrow.fill = NULL,
lineend = "butt",
linejoin = "round",
na.rm = FALSE,
show.legend = NA,
inherit.aes = TRUE)
?geom_curve
geom_curve(aes(father,son) data = galton_heights)
geom_curve(aes(father,son), data = galton_heights)
qplot(galton_heights$father , geom='histogram', color=I("black"))
max(galton_heights$father)
galton_heights$father1 = (galton_heights$father - min(galton_heights$father))/ max(galton_heights$father)- min(galton_heights$father)
qplot(galton_heights$father1 , geom='histogram', color=I("black"))
qplot(galton_heights$father , geom='histogram', color=I("black"))
qplot(galton_heights$father1 , geom='histogram', color=I("black"))
qplot(galton_heights$father1 , geom='histogram', color=I("black"))
qplot(galton_heights$father , geom='histogram', color=I("black"))
qplot(galton_heights$father1 , geom='histogram', color=I("black"))
qplot(galton_heights$father1 , geom='histogram', color=I("black") , bins = 30)
qplot(galton_heights$father1 , geom='histogram', color=I("black") , bins = 3)
qplot(galton_heights$father1 , geom='histogram', color=I("black") , bins = 10)
qplot(galton_heights$father , geom='histogram', color=I("black"), bins = 10)
qplot(galton_heights$father1 , geom='histogram', color=I("black") , bins = 10)
qplot(galton_heights$father , geom='histogram', color=I("black"), bins = 10)
qplot(galton_heights$father1 , geom='histogram', color=I("black") , bins = 10)
qplot(galton_heights$father , geom='histogram', color=I("black"), bins = 10)
qplot(galton_heights$father1 , geom='histogram', color=I("black") , bins = 10)
qplot(galton_heights$father , geom='histogram', color=I("black"), bins = 10)
qplot(galton_heights$father1 , geom='histogram', color=I("black") , bins = 10)
qplot(galton_heights$father , geom='histogram', color=I("black"), bins = 15)
qplot(galton_heights$father1 , geom='histogram', color=I("black") , bins = 15)
qplot(galton_heights$father , geom='histogram', color=I("black"), bins = 15)
qplot(galton_heights$father1 , geom='histogram', color=I("black") , bins = 15)
qplot(galton_heights$father , geom='histogram', color=I("black"), bins = 15)
qplot(galton_heights$father1 , geom='histogram', color=I("black") , bins = 15)
qplot(galton_heights$father , geom='histogram', color=I("black"), bins = 15)
qplot(galton_heights$father1 , geom='histogram', color=I("black") , bins = 15)
qplot(galton_heights$father , geom='histogram', color=I("black"), bins = 15)
qplot(galton_heights$father1 , geom='histogram', color=I("black") , bins = 15)
qplot(galton_heights$father , geom='histogram', color=I("black"), bins = 15)
qplot(galton_heights$father1 , geom='histogram', color=I("black") , bins = 15)
qplot(sm,geom = "histogram",binwidth=2,color=I("black"))
#practice sampling distribution #muders
library("dslabs")
library(dplyr)
data("murders")
#sampling distribution of means
sm <- replicate(1000,{sample_n(murders,30)%>% summarize(m = mean(total)) %>% pull(m)})
#mean of sampling distribution
mean(sm) #185.3763 for 1000 samples
#184.1029 for 10000 samples
#more number of samples more accurate is our representation
#population mean
mean(murders$total) #184.3725
qplot(sm,geom = "histogram",binwidth=2,color=I("black"))
#linear regression genetic history example
library(tidyverse)
library(HistData)
galton_heights <- GaltonFamilies %>%
filter(gender == "male") %>%
group_by(family) %>%
sample_n(1) %>%
ungroup() %>%
select(father, childHeight) %>%
rename(son = childHeight)
# summarize() function summarizes the data and presents to us
galton_heights %>% summarize(mean(father),sd(father),mean(son),sd(son))
#find the correlation between son and fathers heights
galton_heights %>% summarize(r=cor(father,son)) %>% pull(r)
#plot can take two vectors
plot(galton_heights$father,galton_heights$son)
#ggplot can only take a data frame as an input
#ggplot using the data argument to take data frame as an input
ggplot(data = galton_heights,aes(father,son))+geom_point(alpha=0.5)
#plot father and son height using ggplot() function, aes() stands for aesthetics and takes the co ordinates to plot
#ggplot using the pipe to take the data from data frame
galton_heights %>% ggplot(aes(father,son)) + geom_point(alpha=0.5)
#extra code
#if we have two vectors we can create a data frame as follows and take it as an input to the ggplot function
ggplot(data = data.frame(galton_heights$father,galton_heights$son),aes(galton_heights$father,galton_heights$son))+geom_point(alpha=0.5)
cor(reading,writing)
cor(galton_heights$father,galton_heights$son)
qplot(sm,geom = "histogram",binwidth=2,color=I("black"))
geom_histogram(aes(x = sm , y = ..density..),binwidth=2,color=I("black"))
qplot(R,geom = "histogram",binwidth=0.05,color = I("black"))
geom_histogram(aes(x = sm , y = ..density..),binwidth=2,color=I("black"))
geom_histogram(aes(x = sm , y = ..density..),binwidth=2,color="black")
murders
ggplot(murders)+ geom_histogram(aes(x = sm , y = ..density..),binwidth=2,color="black")
ggplot(sm)+ geom_histogram(aes(x = sm , y = ..density..),binwidth=2,color="black")
ggplot(murdes)+ geom_histogram(aes(x = murders$total , y = ..density..),binwidth=2,color="black")
data("murders")
murders
ggplot(murders)+ geom_histogram(aes(x = murders$total , y = ..density..),binwidth=2,color="black")
ggplot(murders)+ geom_histogram(aes(x = murders$population , y = ..density..),binwidth=2,color="black")
ggplot(murders)+ geom_histogram(aes(x = murders$total, y = ..density..),binwidth=2,color="black")
ggplot(murders)+ geom_histogram(aes(x = total, y = ..density..),binwidth=2,color="black")
galton_heights <- GaltonFamilies %>%
filter(gender == "male") %>%
group_by(family) %>%
sample_n(1) %>%
ungroup() %>%
select(father, childHeight) %>%
rename(son = childHeight)
# summarize() function summarizes the data and presents to us
galton_heights %>% summarize(mean(father),sd(father),mean(son),sd(son))
galton_heights
ggplot(galton_heights)+ geom_histogram(aes(x = father, y = ..density..),binwidth=2,color="black")
ggplot(galton_heights)+ geom_histogram(aes(x = son, y = ..density..),binwidth=2,color="black")
ggplot(galton_heights)+ geom_histogram(aes(x = son, y = ..density..),binwidth=1,color="black")
#representing the sampling distribution using histogram
qplot(x = sm,geom="histogram",binwidth=1,color=I("black"))
#histogram with ggplot
ggplot(galton_heights)+ geom_histogram(aes(x = son, y = ..density..),binwidth=1,color="black")
+ geom_line()
+ geom_line(x=heights)
#histogram with ggplot
ggplot(galton_heights) + geom_histogram(aes(x = son, y = ..density..),binwidth=1,color="black") + geom_line(aes(x = son,y = ..density..))
#histogram with ggplot
ggplot(galton_heights) + geom_histogram(aes(x = son, y = ..density..),binwidth=1,color="black") + geom_line(aes(x = son,y = son,color="red"))
#histogram with ggplot
ggplot(galton_heights) + geom_histogram(aes(x = son, y = ..density..),binwidth=1,color="black") + geom_line(aes(x = son,y = father,color="red"))
#histogram with ggplot
ggplot(galton_heights) + geom_histogram(aes(x = son, y = ..density..),binwidth=1,color="black") + geom_line(aes(x = son,y = 0,color="red"))
#histogram with ggplot
ggplot(galton_heights) + geom_histogram(aes(x = son, y = ..density..),binwidth=1,color="black") + geom_line(aes(x = son,y = y,color="red"))
#histogram with ggplot
ggplot(galton_heights) + geom_histogram(aes(x = son, y = ..density..),binwidth=1,color="black") + geom_line(aes(x = son,y = y,color="red"))
#histogram with ggplot
ggplot(galton_heights) + geom_histogram(aes(x = son, y = ..density..),binwidth=1,color="black") + geom_line(aes(x = son,y = ,color="red"))
#histogram with ggplot
ggplot(galton_heights) + geom_histogram(aes(x = son, y = ..density..),binwidth=1,color="black") + geom_line(aes(y = son), color="red") + facet_wrap(~ group)
#histogram with ggplot
ggplot(galton_heights) + geom_histogram(aes(x = son, y = ..density..),binwidth=1,color="black") + geom_line(aes(y = son), color="red")
#histogram with ggplot
ggplot(aes(x = gal)) + geom_histogram(aes(x = son, y = ..density..),binwidth=1,color="black") + geom_line(aes(y = son), color="red")
#histogram with ggplot
ggplot(aes(x = galton_heights)) + geom_histogram(aes(x = son, y = ..density..),binwidth=1,color="black") + geom_line(aes(y = son), color="red")
qplot(galton_heights$father , geom='histogram', color=I("black"), bins = 15)
# create the dataset
library(tidyverse)
install.packages("HistData")
library(HistData)
data("GaltonFamilies")
set.seed(1983)
galton_heights <- GaltonFamilies %>%
filter(gender == "male") %>%
group_by(family) %>%
sample_n(1) %>%
ungroup() %>%
select(father, childHeight) %>%
rename(son = childHeight)
# means and standard deviations
galton_heights %>%
summarize(mean(father), sd(father), mean(son), sd(son))
# scatterplot of father and son heights
galton_heights %>%
ggplot(aes(father, son)) +
geom_point(alpha = 0.5)
ggplot(galton_heights,aes(father,son)) + geom_point(alpha= 0.5)
rho <- mean(scale(galton_heights$father)*scale(galton_heights$son))
rho
galton_heights %>% summarize(r = cor(father, son)) %>% pull(r)
#rho is the symbol for correlation coefficient
cor(w_salary[1:62],b_salary) #correlation coefficient function
length(b_salary)
qplot(galton_heights$father , geom='histogram', color=I("black"), bins = 15)
qplot(galton_heights$son , geom='histogram', color=I("black"))
galton_heights$father1 = (galton_heights$father - min(galton_heights$father))/ max(galton_heights$father)- min(galton_heights$father)
qplot(galton_heights$father1 , geom='histogram', color=I("black") , bins = 15)
qplot(galton_heights$father , geom='histogram', color=I("black"), bins = 15)
qplot(galton_heights$father1 , geom='histogram', color=I("black") , bins = 15)
qplot(galton_heights$father1 , geom='histogram', color=I("black") , bins = 15)
qplot(galton_heights$father1 , geom='histogram', color=I("black") , bins = 15)
qplot(galton_heights$father , geom='histogram', color=I("black"), bins = 15)
qplot(galton_heights$father1 , geom='histogram', color=I("black") , bins = 15)
qplot(galton_heights$father , geom='histogram', color=I("black"), bins = 15)
mean(galton_heights$father1)
qplot(galton_heights$father1 , geom='histogram', color=I("black") , bins = 15)
mean(galton_heights$father)
var(galton_heights$father)
qplot(galton_heights$father , geom='histogram', color=I("black"), bins = 15)
mean(galton_heights$father)
summary(mean = mean(galton_heights$father) , var = var(galton_heights$father))
summarize(mean = mean(galton_heights$father) , var = var(galton_heights$father))
summary(mean = mean(galton_heights$father) , var = var(galton_heights$father))
mean(galton_heights$father)
var(galton_heights$father)
69.09888 + 6.484943
max(galton_heights$father)
range(galton_heights$father)
std(gal)
std(galton_heights$father)
sqrt(6.484943)
qplot(x = galton_heights$father , geom='histogram', color=I("black"), bins = 15)
qplot(galton_heights$father, label_value("height") , geom='histogram', color=I("black"), bins = 15)
qplot(galton_heights$father, label = "h", geom='histogram', color=I("black"), bins = 15)
qplot(galton_heights$father , geom='histogram', color=I("black"), bins = 15)
galton_heights$father
sqrt(6.484943)
std(galton_heights$father)/mean(galton_heights$father)
