dataset %>% filter(child == "son")  %>% do(tidy(cor(.$father,.$childHeight)))
dataset %>% filter(child == "son")  %>% do(as.data.frame(cor(.$father,.$childHeight)))
dataset %>% filter(child == "son")  %>% do(tidy(cor(.$father,.$childHeight)))
dataset %>% filter(child == "son")
dataset %>% filter(child == "son")  %>% do(tidy(lm(child)))
dataset %>% filter(child == "son")  %>% do(tidy(lm(childHeight ~ father, data=.)))
as.data.frame(dataset) %>% filter(child == "son")  %>% summarise(cor(father,childHeight))
as.data.frame(dataset) %>% filter(child == "daughter")  %>% summarise(cor(father,childHeight)) #0.3923835
as.data.frame(dataset) %>% filter(child == "daughter")  %>% summarise(cor(mother,childHeight)) #0.428433
as.data.frame(dataset) %>% filter(child == "son")  %>% summarise(cor(mother,childHeight)) #0.3051645
as.data.frame(dataset) %>% filter(child == "son")  %>% summarise(lm(childHeight ~ father,data=.))
as.data.frame(dataset) %>% filter(child == "son")  %>% lm(childHeight ~ father,data=.)
as.data.frame(dataset) %>% filter(child == "daughter")  %>% lm(childHeight ~ father,data=.)
as.data.frame(dataset) %>% filter(child == "son")  %>% lm(childHeight ~ mother,data=.)#
as.data.frame(dataset) %>% filter(child == "daughter")  %>% lm(childHeight ~ mother,data=.)
dataset %>% filter(child == "daughter")
galton_heights <- GaltonFamilies %>%
filter(gender == "male") %>%
group_by(family) %>%
sample_n(1) %>%
ungroup() %>%
select(father, childHeight) %>%
rename(son = childHeight)
galton_heights
galton_heights <- GaltonFamilies %>%
filter(gender == "male") %>%
group_by(family) %>%
sample_n(1) %>%
ungroup() %>%
select(father,mother,childHeight) %>%
rename(son = childHeight)
galton_heights
galton_heights %>% summarise(cor(father,son))
galton_heights %>% summarise(cor(mother,son)) #
galton_heights <- GaltonFamilies %>%
filter(gender == "female") %>%
group_by(family) %>%
sample_n(1) %>%
ungroup() %>%
select(father,mother,childHeight) %>%
rename(daughter = childHeight)
galton_heights
galton_heights %>% summarise(cor(father,daughter))
galton_heights %>% summarise(cor(mother,daughter))
grid.arrange(p1,p2,p3,p4)
GaltonFamilies %>%
filter(gender == "male") %>%
group_by(family)
GaltonFamilies %>%
filter(gender == "male") %>%
group_by(family) %>%
sample_n(1)
GaltonFamilies %>%
filter(gender == "male") %>%
group_by(family) %>%
sample_n(1) %>%
ungroup()
GaltonFamilies %>%
filter(gender == "male") %>%
group_by(family) %>%
sample_n(1) %>%
ungroup() %>%
select(father,mother,childHeight)
GaltonFamilies %>%
filter(gender == "female") %>%
group_by(family)
GaltonFamilies %>%
filter(gender == "female") %>%
group_by(family) %>%
sample_n(1)
GaltonFamilies %>%
filter(gender == "female") %>%
group_by(family)
GaltonFamilies %>%
filter(gender == "female") %>%
group_by(family) %>%
sample_n(1)
GaltonFamilies %>%
filter(gender == "female") %>%
group_by(family) %>%
sample_n(1) %>%
ungroup()
GaltonFamilies %>%
filter(gender == "female") %>%
group_by(family)
GaltonFamilies %>%
filter(gender == "male") %>%
group_by(family) %>%
sample_n(1)
GaltonFamilies %>%
filter(gender == "female") %>%
group_by(family) %>%
sample_n(1)
GaltonFamilies %>%
filter(gender == "female") %>%
group_by(family) %>%
sample_n(1)
GaltonFamilies %>%
filter(gender == "female") %>%
group_by(family) %>%
sample_n(1)
GaltonFamilies %>%
filter(gender == "female") %>%
group_by(family) %>%
sample_n(1)
library(broom)
galton_heights
galton_heights %>% tidy(lm(daughter ~ father,data=.))
galton_heights %>% tidy(lm(daughter ~ father,data=.))
galton_heights %>% tidy(lm(daughter ~ father,data=.))
galton_heights %>% tidy(lm(daughter ~ father,data=.))
galton_heights %>% tidy(lm(daughter ~ father,data=.))
Cstack_info()
galton_heights %>% tidy(lm(daughter ~ father,data=.))
galton_heights
galton_heights %>% do(tidy(lm(daughter ~ father,data=.)))
galton_heights <- GaltonFamilies %>%
filter(gender == "male") %>%
group_by(family) %>%
sample_n(1) %>%
ungroup() %>%
select(father,mother,childHeight) %>%
rename(son = childHeight)
galton_heights
galton_heights %>% do(tidy(lm(mother ~ son,data=.)))
galton_heights <- GaltonFamilies %>%
filter(gender == "female") %>%
group_by(family) %>%
sample_n(1) %>%
ungroup() %>%
select(father,mother,childHeight) %>%
rename(daughter = childHeight)
galton_heights %>% do(tidy(lm(daughter ~ father,data=.)))
galton_heights
galton_heights %>% do(tidy(lm(daughter ~ father,data=.)))
galton_heights %>% do(tidy(lm(daughter ~ father,data=.)))
galton_heights <- GaltonFamilies %>%
filter(gender == "female") %>%
group_by(family) %>%
sample_n(1) %>%
ungroup() %>%
select(father,mother,childHeight) %>%
rename(daughter = childHeight)
galton_heights %>% do(tidy(lm(daughter ~ father,data=.)))
galton_heights <- GaltonFamilies %>%
filter(gender == "female") %>%
group_by(family) %>%
sample_n(1) %>%
ungroup() %>%
select(father,mother,childHeight) %>%
rename(daughter = childHeight)
galton_heights %>% do(tidy(lm(daughter ~ father,data=.)))
galton_heights %>% do(tidy(lm(daughter ~ father,data=.)))
GaltonFamilies
galton_heights
galton_heights
GaltonFamilies
galton
data()
data(hist)
library(hist)
library(HistData)
data(galton)
data(gal)
data("Galton")
Galton
#Ultimately I found the way to filter the galton families and apply correlation
# after grouping according to family, sample_n() function randomly picks a daughter or a son from a family
# So that we ultimately have a single entry per family
set.seed(1983)
galton_heights <- GaltonFamilies %>%
filter(gender == "female") %>%
group_by(family) %>%
sample_n(1) %>%
ungroup() %>%
select(father,mother,childHeight) %>%
rename(daughter = childHeight)
galton_heights
galton_heights %>% tidy(lm(daughter ~ father,data=.))
galton_heights %>% do(tidy(lm(daughter ~ father,data=.)))
galton_heights %>% tidy(cor(father,daughter))
galton_heights %>% do(tidy(cor(father,daughter)))
galton_heights %>% do(tidy(cor(.$father,.$daughter)))
galton_heights
galton_heights_d <- GaltonFamilies %>%
filter(gender == "female") %>%
group_by(family) %>%
sample_n(1) %>%
ungroup() %>%
select(father,mother,childHeight) %>%
rename(daughter = childHeight)
galton_heights_d
galton_heights_s <- GaltonFamilies %>%
filter(gender == "male") %>%
group_by(family) %>%
sample_n(1) %>%
ungroup() %>%
select(father,mother,childHeight) %>%
rename(son = childHeight)
library(tidyverse)
library(HistData)
data("GaltonFamilies")
set.seed(1) # if you are using R 3.5 or earlier
set.seed(1, sample.kind = "Rounding") # if you are using R 3.6 or later
galton <- GaltonFamilies %>%
group_by(family, gender) %>%
sample_n(1) %>%
ungroup() %>%
gather(parent, parentHeight, father:mother) %>%
mutate(child = ifelse(gender == "female", "daughter", "son")) %>%
unite(pair, c("parent", "child"))
galton
galton %>% filter(pair = "father_daughter")
galton %>% filter(pair == "father_daughter")
galton %>% filter(pair == "father_daughter")
galton %>% filter(pair == "father_daughter") %>% do(tidy(lm(daughter ~ father,data=.)))
galton %>% filter(pair == "father_daughter") %>% do(tidy(lm(childHeight ~ father,data=.)))
galton %>% filter(pair == "father_daughter") %>% do(tidy(lm(childHeight ~ parentHeight,data=.)))
galton %>% filter(pair == "mother_son") %>% do(tidy(lm(parentHeight ~ childHeight ,data=.)))
galton %>% filter(pair == "father_daughter") %>% do(tidy(lm(childHeight~parentHeight ,data=.)))
galton %>% filter(pair == "mother_son") %>% do(tidy(lm(childHeight ~ parentHeight ,data=.)))
galton %>% filter(pair == "father_daughter") %>% do(tidy(lm(childHeight~parentHeight ,data=.)))
galton %>% filter(pair == "mother_son") %>% do(tidy(lm(childHeight ~ parentHeight ,data=.)))
galton %>% filter(pair == "mother_daughter") %>% do(tidy(lm(childHeight ~ parentHeight ,data=.)))
galton %>% filter(pair == "father_son") %>% do(tidy(lm(childHeight ~ parentHeight ,data=.)))
galton %>% ggplot(aes(childHeight, y = estimate, ymin = conf.low, ymax = conf.high)) +
geom_errorbar() +
geom_point()
galton %>% ggplot(aes(parentHeight, y = childHeight, ymin = conf.low, ymax = conf.high)) +
geom_errorbar() +
geom_point()
galton %>% filter(pair == "father_daughter") %>% do(tidy(lm(childHeight~parentHeight ,data=.)),conf.int = TRUE)
galton %>% filter(pair == "father_daughter") %>% do(tidy(lm(childHeight~parentHeight ,data=.),conf.int = TRUE))
galton %>% filter(pair == "mother_daughter") %>% do(tidy(lm(childHeight ~ parentHeight ,data=.),conf.int = TRUE))
galton %>% filter(pair == "father_son") %>% do(tidy(lm(childHeight ~ parentHeight ,data=.),conf.int = TRUE))
galton %>% do(tidy(lm(childHeight ~ parentHeight ,data=.),conf.int = TRUE)) %>% ggplot(aes(parentHeight, y = childHeight, ymin = conf.low, ymax = conf.high)) +
geom_errorbar() +
geom_point()
galton %>% do(tidy(lm(childHeight ~ parentHeight ,data=.),conf.int = TRUE)) %>% ggplot(aes(parentHeight, y = childHeight, ymin = conf.low, ymax = conf.high)) +
geom_errorbar() +
geom_point()
galton
galton %>% filter(pair == "father_son") %>% do(tidy(lm(childHeight ~ parentHeight ,data=.),conf.int = TRUE))
galton %>% do(tidy(lm(childHeight ~ parentHeight ,data=.),conf.int = TRUE)) %>% ggplot(aes(parentHeight, y = childHeight, ymin = conf.low, ymax = conf.high)) +
geom_errorbar() +
geom_point()
galton %>% do(tidy(lm(childHeight ~ parentHeight ,data=.),conf.int = TRUE))
galton %>% do(tidy(lm(childHeight ~ parentHeight ,data=.),conf.int = TRUE)) %>% ggplot(aes(pair, y = childHeight, ymin = conf.low, ymax = conf.high)) +
geom_errorbar() +
geom_point()
galton %>% do(tidy(lm(childHeight ~ parentHeight ,data=.),conf.int = TRUE))
galton %>% do(tidy(lm(childHeight ~ parentHeight ,data=.),conf.int = TRUE)) %>% select(parentHeight, childHeight, estimate, conf.low, conf.high) %>% ggplot(aes(parentHeight, y = childHeight, ymin = conf.low, ymax = conf.high)) +
geom_errorbar() +
geom_point()
galton %>% do(tidy(lm(childHeight ~ parentHeight ,data=.),conf.int = TRUE)) %>%
select(parentHeight, childHeight, estimate, conf.low, conf.high)
galton %>% do(tidy(lm(childHeight ~ parentHeight ,data=.),conf.int = TRUE))
dat %>%
group_by(HR) %>%
do(tidy(lm(R ~ BB, data = .), conf.int = TRUE)) %>%
filter(term == "BB") %>%
select(HR, estimate, conf.low, conf.high) %>%
ggplot(aes(HR, y = estimate, ymin = conf.low, ymax = conf.high)) +
geom_errorbar() +
geom_point()
dat %>%
group_by(HR) %>%
do(tidy(lm(R ~ BB, data = .), conf.int = TRUE))
dat %>%
group_by(HR) %>%
do(tidy(lm(R ~ BB, data = .), conf.int = TRUE)) %>%
filter(term == "BB")
galton %>%
group_by(pair) %>%
do(tidy(lm(childHeight ~ parentHeight, data = .), conf.int = TRUE))
galton %>%
group_by(pair) %>%
do(tidy(lm(childHeight ~ parentHeight, data = .), conf.int = TRUE)) %>%
select(HR, estimate, conf.low, conf.high) %>%
ggplot(aes(HR, y = estimate, ymin = conf.low, ymax = conf.high)) +
geom_errorbar() +
geom_point()
galton %>%
group_by(pair) %>%
do(tidy(lm(childHeight ~ parentHeight, data = .), conf.int = TRUE)) %>%
select(pair, estimate, conf.low, conf.high)
galton %>%
group_by(pair) %>%
do(tidy(lm(childHeight ~ parentHeight, data = .), conf.int = TRUE)) %>%
select(pair, estimate, conf.low, conf.high) %>%
ggplot(aes(pair, y = estimate, ymin = conf.low, ymax = conf.high)) +
geom_errorbar() +
geom_point()
galton %>%
group_by(pair) %>%
do(tidy(lm(childHeight ~ parentHeight, data = .), conf.int = TRUE))
galton
Teams
Teams %>% mutate(runrate = R/G,bbrate = BB/G)
Teams %>% mutate(runrate = R/G,bbrate = BB/G) %>% do(tidy(lm(runrate ~ bbrate),conf.int = TRUE))
Teams %>% mutate(runrate = R/G,bbrate = BB/G) %>% do(tidy(lm(runrate ~ bbrate,data=.),conf.int = TRUE))
Teams %>%
filter(yearID %in% 2002) %>%
mutate(BB = BB/G,
singles = (H-X2B-X3B-HR)/G,
doubles = X2B/G,
triples =X3B/G,
HR=HR/G,
R=R/G)  %>%
mutate(R_hat = predict(fit, newdata = .)) %>%
ggplot(aes(R_hat, R, label = teamID)) +
geom_point() +
geom_text(nudge_x=0.1, cex = 2) +
geom_abline()
library(Lahman)
data(Teams)
# regression with BB, singles, doubles, triples, HR
fit <- Teams %>%
filter(yearID %in% 1961:2001) %>%
mutate(BB = BB / G,
singles = (H - X2B - X3B - HR) / G,
doubles = X2B / G,
triples = X3B / G,
HR = HR / G,
R = R / G) %>%
lm(R ~ BB + singles + doubles + triples + HR, data = .)
library(dplyr)
# regression with BB, singles, doubles, triples, HR
fit <- Teams %>%
filter(yearID %in% 1961:2001) %>%
mutate(BB = BB / G,
singles = (H - X2B - X3B - HR) / G,
doubles = X2B / G,
triples = X3B / G,
HR = HR / G,
R = R / G) %>%
lm(R ~ BB + singles + doubles + triples + HR, data = .)
Teams %>%
filter(yearID %in% 2002) %>%
mutate(BB = BB/G,
singles = (H-X2B-X3B-HR)/G,
doubles = X2B/G,
triples =X3B/G,
HR=HR/G,
R=R/G)  %>%
mutate(R_hat = predict(fit, newdata = .)) %>%
ggplot(aes(R_hat, R, label = teamID)) +
geom_point() +
geom_text(nudge_x=0.1, cex = 2) +
geom_abline()
library(ggplot2)
Teams %>%
filter(yearID %in% 2002) %>%
mutate(BB = BB/G,
singles = (H-X2B-X3B-HR)/G,
doubles = X2B/G,
triples =X3B/G,
HR=HR/G,
R=R/G)  %>%
mutate(R_hat = predict(fit, newdata = .)) %>%
ggplot(aes(R_hat, R, label = teamID)) +
geom_point() +
geom_text(nudge_x=0.1, cex = 2) +
geom_abline()
# average number of team plate appearances per game
pa_per_game <- Batting %>% filter(yearID == 2002) %>%
group_by(teamID) %>%
summarize(pa_per_game = sum(AB+BB)/max(G)) %>%
pull(pa_per_game) %>%
mean
# compute per-plate-appearance rates for players available in 2002 using previous data
players <- Batting %>% filter(yearID %in% 1999:2001) %>%
group_by(playerID) %>%
mutate(PA = BB + AB) %>%
summarize(G = sum(PA)/pa_per_game,
BB = sum(BB)/G,
singles = sum(H-X2B-X3B-HR)/G,
doubles = sum(X2B)/G,
triples = sum(X3B)/G,
HR = sum(HR)/G,
AVG = sum(H)/sum(AB),
PA = sum(PA)) %>%
filter(PA >= 300) %>%
select(-G) %>%
mutate(R_hat = predict(fit, newdata = .))
# plot player-specific predicted runs
qplot(R_hat, data = players, geom = "histogram", binwidth = 0.5, color = I("black"))
# add 2002 salary of each player
players <- Salaries %>%
filter(yearID == 2002) %>%
select(playerID, salary) %>%
right_join(players, by="playerID")
# add 2002 salary of each player
players <- Salaries %>%
filter(yearID == 2002) %>%
select(playerID, salary) %>%
right_join(players, by="playerID")
tmp_tab <- Appearances %>%
filter(yearID == 2002) %>%
group_by(playerID) %>%
summarize_at(position_names, sum) %>%
ungroup()
players <- Master %>%
select(playerID, nameFirst, nameLast, debut) %>%
mutate(debut = as.Date(debut)) %>%
right_join(players, by="playerID")
players %>% select(nameFirst, nameLast, POS, salary, R_hat) %>%
arrange(desc(R_hat)) %>%
top_n(10)
# players with a higher metric have higher salaries
players %>% ggplot(aes(salary, R_hat, color = POS)) +
geom_point() +
scale_x_log10()
# remake plot without players that debuted after 1998
library(lubridate)
position_names <- c("G_p","G_c","G_1b","G_2b","G_3b","G_ss","G_lf","G_cf","G_rf")
players <- Master %>%
select(playerID, nameFirst, nameLast, debut) %>%
mutate(debut = as.Date(debut)) %>%
right_join(players, by="playerID")
players %>% select(nameFirst, nameLast, POS, salary, R_hat) %>%
arrange(desc(R_hat)) %>%
top_n(10)
# regression with BB, singles, doubles, triples, HR
fit <- Teams %>%
filter(yearID %in% 1961:2001) %>%
mutate(BB = BB / G,
singles = (H - X2B - X3B - HR) / G,
doubles = X2B / G,
triples = X3B / G,
HR = HR / G,
R = R / G) %>%
lm(R ~ BB + singles + doubles + triples + HR, data = .)
Teams %>%
filter(yearID %in% 2002) %>%
mutate(BB = BB/G,
singles = (H-X2B-X3B-HR)/G,
doubles = X2B/G,
triples =X3B/G,
HR=HR/G,
R=R/G)  %>%
mutate(R_hat = predict(fit, newdata = .)) %>%
ggplot(aes(R_hat, R, label = teamID)) +
geom_point() +
geom_text(nudge_x=0.1, cex = 2) +
geom_abline()
# average number of team plate appearances per game
pa_per_game <- Batting %>% filter(yearID == 2002) %>%
group_by(teamID) %>%
summarize(pa_per_game = sum(AB+BB)/max(G)) %>%
pull(pa_per_game) %>%
mean
players <- Batting %>% filter(yearID %in% 1999:2001) %>%
group_by(playerID) %>%
mutate(PA = BB + AB) %>%
summarize(G = sum(PA)/pa_per_game,
BB = sum(BB)/G,
singles = sum(H-X2B-X3B-HR)/G,
doubles = sum(X2B)/G,
triples = sum(X3B)/G,
HR = sum(HR)/G,
AVG = sum(H)/sum(AB),
PA = sum(PA)) %>%
filter(PA >= 300) %>%
select(-G) %>%
mutate(R_hat = predict(fit, newdata = .))
qplot(R_hat, data = players, geom = "histogram", binwidth = 0.5, color = I("black"))
players <- Salaries %>%
filter(yearID == 2002) %>%
select(playerID, salary) %>%
right_join(players, by="playerID")
tmp_tab <- Appearances %>%
filter(yearID == 2002) %>%
group_by(playerID) %>%
summarize_at(position_names, sum) %>%
ungroup()
players <- Master %>%
select(playerID, nameFirst, nameLast, debut) %>%
mutate(debut = as.Date(debut)) %>%
right_join(players, by="playerID")
players %>% select(nameFirst, nameLast, POS, salary, R_hat) %>%
arrange(desc(R_hat)) %>%
top_n(10)
tmp_tab <- Appearances %>%
filter(yearID == 2002) %>%
group_by(playerID) %>%
summarize_at(position_names, sum) %>%
ungroup()
position_names <- c("G_p","G_c","G_1b","G_2b","G_3b","G_ss","G_lf","G_cf","G_rf")
pos <- tmp_tab %>%
select(position_names) %>%
apply(., 1, which.max)
players <- data_frame(playerID = tmp_tab$playerID, POS = position_names[pos]) %>%
mutate(POS = str_to_upper(str_remove(POS, "G_"))) %>%
filter(POS != "P") %>%
right_join(players, by="playerID") %>%
filter(!is.na(POS)  & !is.na(salary))
players <- Master %>%
select(playerID, nameFirst, nameLast, debut) %>%
mutate(debut = as.Date(debut)) %>%
right_join(players, by="playerID")
players %>% select(nameFirst, nameLast, POS, salary, R_hat) %>%
arrange(desc(R_hat)) %>%
top_n(10)
players %>% filter(year(debut) < 1998) %>%
ggplot(aes(salary, R_hat, color = POS)) +
geom_point() +
scale_x_log10()
# players with a higher metric have higher salaries
players %>% ggplot(aes(salary, R_hat, color = POS)) +
geom_point() +
scale_x_log10()
